%% Import data from text file.
% Script for importing data from the following text file:
%
%    E:\annotation\ROC  - V6 JPG.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/05/17 19:56:13

%% Initialize variables.
filename = 'E:\annotation\ROC  - V6 JPG.csv';
delimiter = ',';
startRow = [7,14,21,28,35,42,49,56,63];
endRow = [7,14,21,28,35,42,49,56,63];

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%s%*s%s%*s%*s%s%*s%s%*s%*s%s%*s%s%*s%*s%s%*s%s%*s%*s%s%*s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,4,5,6,7,8,9,10]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(thousandsRegExp, ',', 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Allocate imported array to column variable names
shark_tpr = cell2mat(raw(:, 1));
shark_fpr = cell2mat(raw(:, 2));
hedgehog_tpr = cell2mat(raw(:, 3));
hedgehog_fpr = cell2mat(raw(:, 4));
top_tpr = cell2mat(raw(:, 5));
top_fpr = cell2mat(raw(:, 6));
frame_tpr = cell2mat(raw(:, 7));
frame_fpr = cell2mat(raw(:, 8));
dice_tpr = cell2mat(raw(:, 9));
dice_fpr = cell2mat(raw(:, 10));


%% Clear temporary variables
clearvars delimiter startRow endRow formatSpec fileID block dataArrayBlock col dataArray ans raw numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me;

figure
shark=[shark_fpr,shark_tpr];
sortrows(shark,1);
plot(shark(:,1),shark(:,2))
title('shark');
xlabel('FPR');
ylabel('TPR');

figure
hedgehog=[hedgehog_fpr,hedgehog_tpr];
sortrows(hedgehog,1);
plot(hedgehog(:,1),hedgehog(:,2))
title('top');
xlabel('FPR');
ylabel('TPR');

figure
top=[top_fpr,top_tpr];
sortrows(top,1);
plot(top(:,1),top(:,2))
title('frame');
xlabel('FPR');
ylabel('TPR');

figure
frame=[frame_fpr,frame_tpr];
sortrows(frame,1);
plot(frame(:,1),frame(:,2))
title('hedgehog');
xlabel('FPR');
ylabel('TPR');

figure
dice=[dice_fpr,dice_tpr];
sortrows(dice,1);
plot(dice(:,1),dice(:,2))
title('dice');
xlabel('FPR');
ylabel('TPR');
